using System.Text.Json;
using System.Text.Json.Serialization.Metadata;

namespace Community.System.Net.Http.Json;

internal class CustomJsonTypeInfoResolver
{
    internal static IJsonTypeInfoResolver Empty { get; } = new EmptyJsonTypeInfoResolver();
}

/// <summary>
/// A <see cref="IJsonTypeInfoResolver"/> that returns null for all inputs.
/// </summary>
internal sealed class EmptyJsonTypeInfoResolver : IJsonTypeInfoResolver, IBuiltInJsonTypeInfoResolver
{
    public JsonTypeInfo GetTypeInfo(Type type, JsonSerializerOptions options) => null;

    public bool IsCompatibleWithOptions(JsonSerializerOptions _) => true;
}

/// <summary>
/// Implemented by the built-in converters to avoid rooting
/// unused resolver dependencies in the context of the trimmer.
/// </summary>
internal interface IBuiltInJsonTypeInfoResolver
{
    /// <summary>
    /// Indicates whether the metadata generated by the current resolver
    /// are compatible with the run time specified <see cref="JsonSerializerOptions"/>.
    /// </summary>
    bool IsCompatibleWithOptions(JsonSerializerOptions options);
}
